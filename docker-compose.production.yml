
services:
  database_production:
    image: postgres:15
    container_name: Mini_Tweeter_database_production
    restart: always
    environment:
      POSTGRES_DB: mini_tweeter_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - Mini-Tweeter-network

  migrate_production:
    container_name: Mini_Tweeter_users_service_migrate_production
    image: migrate/migrate:v4.15.2
    volumes:
      - ./migrations:/migrations
    environment:
      - POSTGRES_HOST=database_production
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=mini_tweeter_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    entrypoint: migrate -path migrations/ -database "postgres://postgres:postgres@database:5432/mini_tweeter_db?sslmode=disable"
    command: up
    restart: on-failure
    networks:
      - Mini-Tweeter-network

  user_service_production:
    container_name: Mini_Tweeter_users_service_production
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - ENVIRONMENT=develop
      - RPC_PORT=8082
      - HTTP_PORT=8008
      - POSTGRES_HOST=database_production
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=mini_tweeter_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 10s
    restart: on-failure
    networks:
      - Mini-Tweeter-network

networks:
  Mini-Tweeter-network:
    external: true